services:
    # aucune connection aux autre containers, d'où c'est le 1ER
    db:
        build:
            context: ./.docker/db
        container_name: db
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: db_schema
            MYSQL_USER: user
            MYSQL_PASSWORD: password
        ports:
            - "3306:3306"
        networks:
            - dev
    web:
        build:
            # ici 1 container, mais on peut en avoir 2 séparés
            context: ./.docker/web
            
        container_name: web
        
        ports:
            - "81:80"

        # lien entre contenu du docker et l'arborescence locale du projet
        # dupplique informations afin que soit copié h24, de local à container (instantané) mais de containter à local (ex php créer fichier, cache,... ) ( !!qq secondes car réindexe )
        # chemin local : chemin docker
        volumes:
            - ./:/var/www/classroom-todo # met autwsl -d docker-desktop omatiquement a jour notre code
            - .docker/web/vhost.conf:/etc/apache2/sites-enabled/000-default.conf

        environment: # var environnement
            PHP_CONTAINER: web
            APP_ENV: dev #  a changer si on veut enlever le debuggage symfonie
            APP_DEBUG: 1
        depends_on:
            - db

        networks:
            - dev
    
    # interface web pr bdd
    phpmyadmin:
        build:
            # où est l'image / son chemin
            context: ./.docker/phpmyadmin
            
        container_name: phpmyadmin
        
        environment:
            PMA_HOST: db # permet d'accéder à phpmyadmin, pas de liens à BDD, mais permet de communiquer à api , host = db , osef
            
            PMA_USER: user
            PMA_PASSWORD: password
        
        ports:
            - "8081:80" # https :x
        
        depends_on:
            - db
        
        networks:
            - dev

# dev > test > preprod (= prod mais pas d'accès client)  > prod

# !! pas service mais création du réseaux qiu permet de faire communiquer les container ensemble
networks:
    dev:
